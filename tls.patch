--- SocketClient.java	2015-03-16 19:51:43.706773425 +0100
+++ SocketClient.java	2015-03-16 19:43:59.140771390 +0100
@@ -22,6 +22,9 @@
 import java.net.UnknownHostException;
 import java.util.concurrent.Semaphore;
 
+import javax.net.ssl.SSLSocketFactory;
+import javax.net.ssl.SSLSocket;
+
 import org.meqantt.message.ConnAckMessage;
 import org.meqantt.message.ConnectMessage;
 import org.meqantt.message.DisconnectMessage;
@@ -41,6 +44,7 @@
 	private MqttReader reader;
 	private Semaphore connectionAckLock;
 	private final String id;
+	private MqttListener listener;
 
 	public SocketClient(String id) {
 		this.id = id;
@@ -61,6 +65,29 @@
 		connectionAckLock.acquire();
 	}
 
+	public void connect(String host, int port, String[] protocols, SSLSocketFactory factory) 
+			throws UnknownHostException, IOException, InterruptedException {
+		socket = factory.createSocket(host, port);
+		if(protocols != null) {
+			((SSLSocket) socket).setEnabledProtocols(protocols);
+		}
+                InputStream is = socket.getInputStream();
+                in = new MessageInputStream(is);
+                OutputStream os = socket.getOutputStream();
+                out = new MessageOutputStream(os);
+                reader = new MqttReader();
+                reader.start();
+                ConnectMessage msg = new ConnectMessage(id, false, 60);
+                connectionAckLock = new Semaphore(0);
+                out.writeMessage(msg);
+                connectionAckLock.acquire();
+
+	}
+	
+	public void setListener(MqttListener listener) {
+                this.listener = listener;
+        }
+
 	public void publish(String topic, String message) throws IOException {
 		PublishMessage msg = new PublishMessage(topic, message);
 		out.writeMessage(msg);
@@ -98,8 +125,8 @@
 	}
 
 	private void handleMessage(PublishMessage msg) {
-		System.out.println("PUBLISH (" + msg.getTopic() + "): "
-				+ msg.getDataAsString());
+		if(listener != null)
+                    listener.publishArrived(msg.getTopic(), msg.getData());
 	}
 
 	private class MqttReader extends Thread {
@@ -113,7 +140,10 @@
 					handleMessage(msg);
 				}
 			} catch (IOException e) {
+                            e.printStackTrace();
 			}
+			if(listener != null)
+                            listener.disconnected();
 		}
 	}
 
